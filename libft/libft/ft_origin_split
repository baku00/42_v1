/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   42header.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dgloriod <marvin@42lausanne.ch>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/10/15 14:37:22 by dgloriod          #+#    #+#             */
/*   Updated: 2021/10/15 17:50:04 by dgloriod         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include <stdlib.h>

char	**ft_split(char const *s, char c)
{
	char	**result;
	int		founded;
	int		i;
	int		j;
	int		k;
	int		index;

	founded = 1;
	i = 0;
	j = 0;
	k = 0;
	index = 0;
	while (s[i])
	{
		if (s[i] == c)
			founded++;
		i++;
	}
	result = malloc(sizeof(char *) * founded);
	i = 0;
	while (s[i])
	{
		if (s[i] == c)
		{
			result[index] = malloc(sizeof(char) * (i - j));
			j = i + 1;
			index++;
		}
		else if (i + 1 == ft_strlen((char *) s) && s[i] != c)
		{
			result[index] = malloc(sizeof(char) * (i - j));
		}
		i++;
	}
	i = 0;
	j = 0;
	index = 0;
	while (s[i])
	{
		if (s[i] == c)
		{
			while (j < i)
			{
				result[index][k] = s[j];
				j++;
				k++;
			}
			result[index][k] = '\0';
			j = i + 1;
			index++;
		}
		else if (i + 1 == ft_strlen((char *) s) && s[i] != c)
		{
			while (j < i + 1)
			{
				result[index][k] = s[j];
				j++;
				k++;
			}
			result[index][k] = '\0';
		}
		k = 0;
		i++;
	}
	index = 0;
	while (index < founded)
	{
		index++;
	}
	return (result);
}
